plugins {
    id 'idea'
    id 'maven-publish'
    alias(libs.plugins.archloom)
}

base {
    archivesName = "${mod_name}-fabric-${libs.versions.minecraft.release.get()}"
}

loom {
//    accessWidenerPath = project(":Common").file("src/main/resources/modid.accesswidener")

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
		datagen {
            server()
			setConfigName("Fabric Data")

            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("$rootDir/Common/src/main/generated")}"

            runDir "build/datagen"
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url = "https://maven.terraformersmc.com/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft libs.minecraft
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.release.get()}@zip")
    }
    modImplementation libs.fabric.loader
    modImplementation libs.fabric.api
	
	// https://lallafa.objecthunter.net/exp4j/
    include implementation("net.objecthunter:exp4j:0.4.8")
    // https://github.com/TerraformersMC/ModMenu
    modImplementation(libs.modmenu)

    // JEI compat
    modCompileOnlyApi(libs.jei.common)
    modCompileOnlyApi(libs.jei.fabric)
    modRuntimeOnly(libs.jei.fabric.runtime)

    // YACL
    modImplementation(libs.yacl.fabric)

    implementation project(":Common")
}

processResources {
    from project(":Common").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
